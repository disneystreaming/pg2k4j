<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.disney.pg2k4j</groupId>
	<artifactId>pg2k4j</artifactId>
	<version>${revision}</version>
	<packaging>jar</packaging>

	<name>pg2k4j</name>
	<description>Use Postgres logical replication to publish changes to the WAL to kinesis.</description>

	<distributionManagement>
		<repository>
			<id>p13n.maven</id>
			<name>p13n.maven</name>
			<url>https://artifactory.us-east-1.bamgrid.net/p13n-maven-local</url>
		</repository>
		<snapshotRepository>
			<id>p13n.maven</id>
			<name>p13n.maven</name>
			<url>https://artifactory.us-east-1.bamgrid.net/p13n-maven-local</url>
		</snapshotRepository>
	</distributionManagement>
 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<kpl.version>0.12.9</kpl.version>
		<jackson.version>2.9.6</jackson.version>
		<postgres.version>42.2.2</postgres.version>
		<junit.version>4.11</junit.version>
		<powermock.version>1.7.3</powermock.version>
		<jacoco.version>0.7.6.201602180812</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-kinesis-producer</artifactId>
			<version>${kpl.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgres.version}</version>
		</dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						<exclude>**/models/*</exclude>
						<exclude>**/*Callback*</exclude>
						<exclude>**/*Configuration*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>${coveralls.version}</version>
				<configuration>
					<repoToken>${env.COVERALLS_TOKEN}</repoToken>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
